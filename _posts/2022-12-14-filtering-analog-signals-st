In this post I show how to create an analog filter using Structured Text, in order to filter out high frequency noise that could be affecting the raw input signal. 

Structured Text code:

PROGRAM PLC_PRG
VAR
    iSimulatedSensor : INT := 12000;
    rRawAnalogSignal : REAL; // Unfiltered value from analog sensor 
 rTimeConstant : REAL := 0.05; // Filter time constant 0.0 - 1.0 
 rFilteredAnalogSignal : REAL; // Filtered analog signal
    iJitter : INT := 200; // Jitter for unfiltered value from analog sensor 
END_VAR


// Simulation of the unfiltered analog input signal from a 4-20mA sensor using OSCAT random number generator
// 4mA = 4000, 20mA = 20000
// Unfiltered jitter +/- 0,2mA = 200
OSCAT_BASIC.RDM2( last := iSimulatedSensor,   low := (iSimulatedSensor - iJitter),  high := (iSimulatedSensor + iJitter),  RDM2 == rRawAnalogSignal );

// First order low pass filter
// Lower Time constant value = more signal dampening/smoothing
// Filtered Value = Filtered Value + Constant*(New Value - Filtered Value)
rFilteredAnalogSignal := rFilteredAnalogSignal + rTimeConstant * ( rRawAnalogSignal - rFilteredAnalogSignal );

<iframe width="560" height="315" src="https://www.youtube.com/embed/w5fZ-HQnZUQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
